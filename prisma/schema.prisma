// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  name      String?
  password  String
  workouts  Workout[] // Связь один ко многим с моделью Workout
  exercises Exercise[] // Связь один ко многим с моделью Exercise
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  images    String[]
}

model Workout {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  userId      Int // Внешний ключ для связи с моделью User
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")
  user        User       @relation(fields: [userId], references: [id])
  exercises   Exercise[] // Связь один ко многим с моделью Exercise
}

model Exercise {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  iconPath    String
  sets        Int
  reps        Int
  workoutId   Int // Внешний ключ для связи с моделью Workout
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  workout     Workout  @relation(fields: [workoutId], references: [id])
  userId      Int // Внешний ключ для связи с моделью User
  user        User     @relation(fields: [userId], references: [id])
}
